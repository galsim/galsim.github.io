{"remainingRequest":"/Users/maksim/Desktop/studyVue/vue-crm/node_modules/babel-loader/lib/index.js!/Users/maksim/Desktop/studyVue/vue-crm/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/maksim/Desktop/studyVue/vue-crm/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maksim/Desktop/studyVue/vue-crm/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/maksim/Desktop/studyVue/vue-crm/src/views/Login.vue","mtime":1565902526505},{"path":"/Users/maksim/Desktop/studyVue/vue-crm/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maksim/Desktop/studyVue/vue-crm/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/maksim/Desktop/studyVue/vue-crm/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maksim/Desktop/studyVue/vue-crm/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/maksim/Desktop/studyVue/vue-crm/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { email, required, minLength } from 'vuelidate/lib/validators';\nimport messages from '@/utils/messages';\nexport default {\n  name: 'login',\n  data: function data() {\n    return {\n      email: '',\n      password: ''\n    };\n  },\n  validations: {\n    email: {\n      email: email,\n      required: required\n    },\n    password: {\n      required: required,\n      minLength: minLength(6)\n    }\n  },\n  mounted: function mounted() {\n    if (messages[this.$route.query.message]) {\n      this.$message(messages[this.$route.query.message]);\n    }\n  },\n  methods: {\n    submitHendler: function () {\n      var _submitHendler = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var formData;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.$v.$invalid) {\n                  _context.next = 3;\n                  break;\n                }\n\n                this.$v.$touch();\n                return _context.abrupt(\"return\");\n\n              case 3:\n                formData = {\n                  email: this.email,\n                  password: this.password\n                };\n                _context.prev = 4;\n                _context.next = 7;\n                return this.$store.dispatch('login', formData);\n\n              case 7:\n                this.$router.push('/');\n                _context.next = 12;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](4);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 10]]);\n      }));\n\n      function submitHendler() {\n        return _submitHendler.apply(this, arguments);\n      }\n\n      return submitHendler;\n    }()\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA,SAAA,KAAA,EAAA,QAAA,EAAA,SAAA,QAAA,0BAAA;AACA,OAAA,QAAA,MAAA,kBAAA;AAGA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAAA;AAAA,GAFA;AAMA,EAAA,WAAA,EAAA;AACA,IAAA,KAAA,EAAA;AAAA,MAAA,KAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KADA;AAEA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,QAAA;AAAA,MAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AAAA;AAFA,GANA;AAUA,EAAA,OAVA,qBAUA;AACA,QAAA,QAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,EAAA;AACA,WAAA,QAAA,CAAA,QAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA;AACA;AACA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,aADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEA,KAAA,EAAA,CAAA,QAFA;AAAA;AAAA;AAAA;;AAGA,qBAAA,EAAA,CAAA,MAAA;AAHA;;AAAA;AAMA,gBAAA,QANA,GAMA;AACA,kBAAA,KAAA,EAAA,KAAA,KADA;AAEA,kBAAA,QAAA,EAAA,KAAA;AAFA,iBANA;AAAA;AAAA;AAAA,uBAaA,KAAA,MAAA,CAAA,QAAA,CAAA,OAAA,EAAA,QAAA,CAbA;;AAAA;AAcA,qBAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AAdA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAfA,CAAA","sourcesContent":["<template>\n  <form class=\"card auth-card\" @submit.prevent=\"submitHendler\">\n  <div class=\"card-content\">\n    <span class=\"card-title\">Домашняя бухгалтерия</span>\n    <div class=\"input-field\">\n      <input\n          id=\"email\"\n          type=\"text\"\n          v-model.trim=\"email\"\n          :class=\"{invalid: ($v.email.$dirty && !$v.email.required) || ($v.email.$dirty && !$v.email.email)}\"\n      >\n      <label for=\"email\">Email</label>\n      <small\n        class=\"helper-text invalid\"\n        v-if=\"$v.email.$dirty && !$v.email.required\"\n        >Поле Email не должно быть пустым\n      </small>\n      <small\n        class=\"helper-text invalid\"\n        v-else-if=\"$v.email.$dirty && !$v.email.email\">\n        Введите корректный Email\n      </small>\n    </div>\n    <div class=\"input-field\">\n      <input\n          id=\"password\"\n          type=\"password\"\n          v-model.trim=\"password\"\n          :class=\"{invalid: ($v.password.$dirty && !$v.password.required) || ($v.password.$dirty && !$v.password.minLength)}\"\n      >\n      <label for=\"password\">Пароль</label>\n      <small\n      v-if=\"$v.password.$dirty && !$v.password.required\"\n        class=\"helper-text invalid\">\n        Введите пароль\n      </small>\n      <small\n        v-else-if=\"$v.password.$dirty && !$v.password.minLength\"\n        class=\"helper-text invalid\">\n        Пароль должен быть {{ $v.password.$params.minLength.min}} символов. Сейчас он {{ password.length }}\n        </small>\n    </div>\n  </div>\n  <div class=\"card-action\">\n    <div>\n      <button\n          class=\"btn waves-effect waves-light auth-submit\"\n          type=\"submit\"\n      >\n        Войти\n        <i class=\"material-icons right\">send</i>\n      </button>\n    </div>\n\n    <p class=\"center\">\n      Нет аккаунта?\n      <router-link to=\"/register\">Зарегистрироваться</router-link>\n    </p>\n  </div>\n</form>\n</template>\n<script>\nimport {email, required, minLength} from 'vuelidate/lib/validators'\nimport messages from '@/utils/messages'\n\n\nexport default {\n  name: 'login',\n  data: () => ({\n    email: '',\n    password: ''\n  }),\n  validations : {\n    email: {email, required},\n    password: {required, minLength: minLength(6)}\n  },\n  mounted() {\n    if (messages[this.$route.query.message]) {\n      this.$message(messages[this.$route.query.message])\n    }\n  },\n  methods: {\n    async submitHendler() {\n      if (this.$v.$invalid) {\n        this.$v.$touch()\n        return\n      }\n      const formData = {\n        email: this.email,\n        password: this.password\n      }\n\n\n      try {\n        await this.$store.dispatch('login', formData)\n        this.$router.push('/')\n      } catch (e) {}\n    }\n  }\n}\n</script>\n\n"],"sourceRoot":"src/views"}]}
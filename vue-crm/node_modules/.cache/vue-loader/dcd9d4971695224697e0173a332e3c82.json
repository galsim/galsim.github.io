{"remainingRequest":"/Users/maksim/Desktop/studyVue/vue-crm/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maksim/Desktop/studyVue/vue-crm/src/components/app/navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/maksim/Desktop/studyVue/vue-crm/src/components/app/navbar.vue","mtime":1564606172393},{"path":"/Users/maksim/Desktop/studyVue/vue-crm/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maksim/Desktop/studyVue/vue-crm/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/maksim/Desktop/studyVue/vue-crm/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maksim/Desktop/studyVue/vue-crm/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      date: new Date(),\n      interval: null,\n      dropdown: null\n    }\n  },\n  methods: {\n    logout() {\n      this.$router.push('/login?message=logout')\n    }\n  },\n  mounted() {\n    this.interval = setInterval(() => {\n      this.date = new Date()\n    }, 1000)\n    this.dropdown = M.Dropdown.init(this.$refs.dropdown, {\n      constrainWidth: true\n    })\n  },\n  beforeDestroy() {\n    clearInterval(this.interval)\n    if (this.dropdown && this.dropdown.destroy) {\n      this.dropdown.destroy()\n    }\n  }\n}\n",{"version":3,"sources":["navbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"navbar.vue","sourceRoot":"src/components/app","sourcesContent":["<template>\n  <nav class=\"navbar orange lighten-1\">\n    <div class=\"nav-wrapper\">\n      <div class=\"navbar-left\">\n        <a href=\"#\" @click.prevent=\"$emit('click')\">\n          <i class=\"material-icons black-text\">dehaze</i>\n        </a>\n        <span class=\"black-text\">{{ date | date('datetime')}}</span>\n      </div>\n\n      <ul class=\"right hide-on-small-and-down\">\n        <li>\n          <a\n            class=\"dropdown-trigger black-text\"\n            href=\"#\"\n            data-target=\"dropdown\"\n            ref=\"dropdown\"\n            >\n            USER NAME\n            <i class=\"material-icons right\">arrow_drop_down</i>\n          </a>\n\n          <ul id=\"dropdown\" class=\"dropdown-content\">\n            <li>\n              <router-link to=\"/profile\" class=\"black-text\">\n                <i class=\"material-icons\">account_circle</i>Профиль\n              </router-link>\n            </li>\n            <li class=\"divider\" tabindex=\"-1\"></li>\n            <li>\n              <a href=\"#\" class=\"black-text\" @click.prevent=\"logout\">\n                <i class=\"material-icons\">assignment_return</i>Выйти\n              </a>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </nav>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      date: new Date(),\n      interval: null,\n      dropdown: null\n    }\n  },\n  methods: {\n    logout() {\n      this.$router.push('/login?message=logout')\n    }\n  },\n  mounted() {\n    this.interval = setInterval(() => {\n      this.date = new Date()\n    }, 1000)\n    this.dropdown = M.Dropdown.init(this.$refs.dropdown, {\n      constrainWidth: true\n    })\n  },\n  beforeDestroy() {\n    clearInterval(this.interval)\n    if (this.dropdown && this.dropdown.destroy) {\n      this.dropdown.destroy()\n    }\n  }\n}\n</script>\n\n"]}]}
{"remainingRequest":"/Users/maksim/Desktop/studyVue/vue-crm/node_modules/babel-loader/lib/index.js!/Users/maksim/Desktop/studyVue/vue-crm/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/maksim/Desktop/studyVue/vue-crm/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maksim/Desktop/studyVue/vue-crm/src/views/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/maksim/Desktop/studyVue/vue-crm/src/views/Register.vue","mtime":1570189172990},{"path":"/Users/maksim/Desktop/studyVue/vue-crm/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maksim/Desktop/studyVue/vue-crm/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/maksim/Desktop/studyVue/vue-crm/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maksim/Desktop/studyVue/vue-crm/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/maksim/Desktop/studyVue/vue-crm/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { email, required, minLength } from 'vuelidate/lib/validators';\nexport default {\n  name: 'register',\n  data: function data() {\n    return {\n      email: '',\n      password: '',\n      name: '',\n      agree: false\n    };\n  },\n  validations: {\n    email: {\n      email: email,\n      required: required\n    },\n    password: {\n      required: required,\n      minLength: minLength(6)\n    },\n    name: {\n      required: required\n    },\n    agree: {\n      checked: function checked(v) {\n        return v;\n      }\n    }\n  },\n  methods: {\n    submitHandler: function () {\n      var _submitHandler = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var formData;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.$v.$invalid) {\n                  _context.next = 3;\n                  break;\n                }\n\n                this.$v.$touch();\n                return _context.abrupt(\"return\");\n\n              case 3:\n                formData = {\n                  email: this.email,\n                  password: this.password,\n                  name: this.name\n                };\n                _context.next = 6;\n                return this.$store.dispatch('register', formData);\n\n              case 6:\n                this.$router.push('/');\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function submitHandler() {\n        return _submitHandler.apply(this, arguments);\n      }\n\n      return submitHandler;\n    }()\n  }\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA,SAAA,KAAA,EAAA,QAAA,EAAA,SAAA,QAAA,0BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,IAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA;AAJA,KAAA;AAAA,GAFA;AAQA,EAAA,WAAA,EAAA;AACA,IAAA,KAAA,EAAA;AAAA,MAAA,KAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KADA;AAEA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,QAAA;AAAA,MAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AAAA,KAFA;AAGA,IAAA,IAAA,EAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KAHA;AAIA,IAAA,KAAA,EAAA;AAAA,MAAA,OAAA,EAAA,iBAAA,CAAA;AAAA,eAAA,CAAA;AAAA;AAAA;AAJA,GARA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,aADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGA,KAAA,EAAA,CAAA,QAHA;AAAA;AAAA;AAAA;;AAIA,qBAAA,EAAA,CAAA,MAAA;AAJA;;AAAA;AAQA,gBAAA,QARA,GAQA;AACA,kBAAA,KAAA,EAAA,KAAA,KADA;AAEA,kBAAA,QAAA,EAAA,KAAA,QAFA;AAGA,kBAAA,IAAA,EAAA,KAAA;AAHA,iBARA;AAAA;AAAA,uBAcA,KAAA,MAAA,CAAA,QAAA,CAAA,UAAA,EAAA,QAAA,CAdA;;AAAA;AAgBA,qBAAA,OAAA,CAAA,IAAA,CAAA,GAAA;;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAdA,CAAA","sourcesContent":["<template>\n  <form class=\"card auth-card\" @submit.prevent=\"submitHandler\">\n    <div class=\"card-content\">\n      <span class=\"card-title\">Домашняя бухгалтерия</span>\n      <div class=\"input-field\">\n        <input\n          id=\"email\"\n          type=\"text\"\n          v-model.trim=\"email\"\n          :class=\"{invalid: ($v.email.$dirty && !$v.email.required) || ($v.email.$dirty && !$v.email.email)}\"\n        />\n        <label for=\"email\">Email</label>\n        <small\n          class=\"helper-text invalid\"\n          v-if=\"$v.email.$dirty && !$v.email.required\"\n        >Поле Email не должно быть пустым</small>\n        <small\n          class=\"helper-text invalid\"\n          v-else-if=\"$v.email.$dirty && !$v.email.email\"\n        >Введите корректный Email</small>\n      </div>\n      <div class=\"input-field\">\n        <input\n          id=\"password\"\n          type=\"password\"\n          v-model.trim=\"password\"\n          :class=\"{invalid: ($v.password.$dirty && !$v.password.required) || ($v.password.$dirty && !$v.password.minLength)}\"\n        />\n        <label for=\"password\">Пароль</label>\n        <small\n          v-if=\"$v.password.$dirty && !$v.password.required\"\n          class=\"helper-text invalid\"\n        >Введите пароль</small>\n        <small\n          v-else-if=\"$v.password.$dirty && !$v.password.minLength\"\n          class=\"helper-text invalid\"\n        >Пароль должен быть {{ $v.password.$params.minLength.min}} символов. Сейчас он {{ password.length }}</small>\n      </div>\n      <div class=\"input-field\">\n        <input\n          id=\"name\"\n          type=\"text\"\n          :class=\"{invalid: $v.name.$dirty && !$v.name.required}\"\n          v-model.trim=\"name\">\n          <label for=\"name\">Имя</label>\n          <small\n          class=\"helper-text invalid\"\n          v-if=\"$v.name.$dirty && !$v.name.required\"\n          >\n          Введите ваше имя\n          </small>\n      </div>\n      <p>\n        <label>\n          <input type=\"checkbox\" v-model=\"agree\"/>\n          <span>С правилами согласен</span>\n        </label>\n      </p>\n    </div>\n    <div class=\"card-action\">\n      <div>\n        <button class=\"btn waves-effect waves-light auth-submit\" type=\"submit\">\n          Зарегистрироваться\n          <i class=\"material-icons right\">send</i>\n        </button>\n      </div>\n\n      <p class=\"center\">\n        Уже есть аккаунт?\n        <router-link to=\"/login\">Войти!</router-link>\n      </p>\n    </div>\n  </form>\n</template>\n\n<script>\nimport { email, required, minLength } from 'vuelidate/lib/validators';\n\nexport default {\n  name: 'register',\n  data: () => ({\n    email: '',\n    password: '',\n    name: '',\n    agree: false\n  }),\n  validations: {\n    email: { email, required },\n    password: { required, minLength: minLength(6) },\n    name: { required },\n    agree: { checked: v => v }\n  },\n  methods: {\n    async submitHandler() {\n\n      if (this.$v.$invalid) {\n        this.$v.$touch()\n        return\n      }\n\n      const formData = {\n        email: this.email,\n        password: this.password,\n        name: this.name\n      }\n\n      await this.$store.dispatch('register', formData)\n\n      this.$router.push('/')\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/views"}]}